upstream server.domain.de {
	server ip.ip.ip.ip weight=1 fail_timeout=0;
}


server {
	listen server.domain.de:80;
	server_name server.domain.de;
	client_max_body_size 8192m;
	access_log /var/log/nginx/server.domain.de-access.log;
	error_log /var/log/nginx/server.domain.de-error.log;

	# increase proxy buffer to handle some Odoo web requests
	proxy_buffers 16 64k;
	proxy_buffer_size 128k;
	proxy_headers_hash_max_size 51200;
	proxy_headers_hash_bucket_size 6400;

	#general proxy settings
	# force timeouts if the backend dies
	proxy_connect_timeout 600s;
	proxy_send_timeout 600s;
	proxy_read_timeout 600s;
	proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
	
	# error pages
	error_page 500 502 503 504 /custom_50x.html;
		location = /custom_50x.html {
		root /usr/share/nginx/html;
		internal;
	}

	# set headers
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;

	location / {
		proxy_pass http://127.0.0.1:oldport;
		proxy_set_header X-Forwarded-Proto http;
		include /etc/nginx/proxy_params;
	}
	
	location ~* /web/static/ {
		proxy_cache_valid 200 60m;
		proxy_buffering    on;
		expires 864000;
		proxy_pass http://127.0.0.1:oldport;
	}	
		
	# let's speed up PageSpeed by storing it in the super duper fast memcached
	pagespeed MemcachedThreads 1;
	pagespeed MemcachedServers "localhost:11211";

	# Filter settings
	pagespeed RewriteLevel PassThrough;
	pagespeed EnableFilters remove_comments,collapse_whitespace,add_head,combine_css,convert_meta_tags,extend_cache,combine_heads,dedup_inlined_images,elide_attributes,hint_preload_subresources,include_js_source_maps,inline_google_font_css,local_storage_cache,pedantic,insert_dns_prefetch;
	pagespeed ForbidFilters rewrite_javascript,defer_javascript,inline_javascript,canonicalize_javascript_libraries;
	pagespeed DisableFilters rewrite_javascript,defer_javascript,inline_javascript,canonicalize_javascript_libraries;
	pagespeed ForbidAllDisabledFilters true;

	#  Ensure requests for pagespeed optimized resources go to the pagespeed
	#  handler and no extraneous headers get set.
	location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
		add_header "" "";
	}
	location ~ "^/ngx_pagespeed_static/" {
	}
	location ~ "^/ngx_pagespeed_beacon$" {
	}
	location /ngx_pagespeed_statistics {
		allow 127.0.0.1;
		deny all;
	}
	location /ngx_pagespeed_global_statistics {
		allow 127.0.0.1;
		deny all;
	}
	location /ngx_pagespeed_message {
		allow 127.0.0.1;
		deny all;
	}
	location /pagespeed_console {
		allow 127.0.0.1;
		deny all;
	}
}
