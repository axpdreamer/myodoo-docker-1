upstream server.domain.de {
	server ip.ip.ip.ip weight=1 fail_timeout=0;
}

server {
	listen server.domain.de:80;
	server_name server.domain.de;
	rewrite ^/.*$ https://$host$request_uri? permanent;
}

server {
	listen server.domain.de:443 ssl;
	server_name server.domain.de;
	client_max_body_size 8192m;
	access_log /var/log/nginx/server.domain.de-access.log;
	error_log /var/log/nginx/server.domain.de-error.log;

	# ssl certificate files
	ssl on;
	#zert1 ssl_certificate /etc/ssl/zertifikat.crt;
	#zert1 ssl_certificate_key /etc/ssl/zertifikat.key;
	#zert2 ssl_certificate /etc/letsencrypt/live/zertifikat.crt/fullchain.pem;
	#zert2 ssl_certificate_key /etc/letsencrypt/live/zertifikat.key/privkey.pem;


	# add ssl specific settings
	keepalive_timeout    60;
	ssl_protocols        TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers         HIGH:!aNULL:!MD5;

	# limit ciphers
	ssl_session_cache    shared:SSL:1m;
	ssl_session_timeout  5m;

	# increase proxy buffer to handle some Odoo web requests
	proxy_buffers 16 64k;
	proxy_buffer_size 128k;
	proxy_headers_hash_max_size 76800;
	proxy_headers_hash_bucket_size 9600;

	#general proxy settings
	# force timeouts if the backend dies
	proxy_connect_timeout 600s;
	proxy_send_timeout 600s;
	proxy_read_timeout 600s;
	proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

	# error pages
	error_page 500 502 503 504 /custom_50x.html;
	location = /custom_50x.html {
		root /usr/share/nginx/html;
		internal;
	}

	# set headers
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;

	location / {
		proxy_pass http://127.0.0.1:oldport;
		proxy_set_header X-Forwarded-Proto http;
		#auth_basic       "Restricted Area";
		#auth_basic_user_file  htpasswd/testmyodoo;
		}

	# Chat Odoo
	#location /longpolling {
	#	proxy_pass http://127.0.0.1:PORT;
	#	}

	location ~* /web/static/ {
		proxy_cache_valid 200 60m;
		proxy_buffering    on;
		expires 864000;
		proxy_pass http://127.0.0.1:oldport;
	}
		
	# let's speed up PageSpeed by storing it in the super duper fast memcached
	pagespeed MemcachedThreads 1;
	pagespeed MemcachedServers "localhost:11211";

	# Filter settings
	pagespeed RewriteLevel OptimizeForBandwidth;
	pagespeed EnableFilters remove_quotes,collapse_whitespace,remove_comments,extend_cache;
	pagespeed ForbidFilters inline_javascript,rewrite_javascript,combine_javascript;
	pagespeed DisableFilters inline_javascript,rewrite_javascript,combine_javascript;

	#  Ensure requests for pagespeed optimized resources go to the pagespeed
	#  handler and no extraneous headers get set.
	location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
		add_header "" "";
	}
	location ~ "^/ngx_pagespeed_static/" {
	}
	location ~ "^/ngx_pagespeed_beacon$" {
	}
	location /ngx_pagespeed_statistics {
		allow 127.0.0.1;
		deny all;
	}
	location /ngx_pagespeed_global_statistics {
		allow 127.0.0.1;
		deny all;
	}
	location /ngx_pagespeed_message {
		allow 127.0.0.1;
		deny all;
	}
	location /pagespeed_console {
		allow 127.0.0.1;
		deny all;
	}		
}

